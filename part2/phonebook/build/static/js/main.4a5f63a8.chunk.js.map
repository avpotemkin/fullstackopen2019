{"version":3,"sources":["components/Person.js","components/Search.js","components/AddPersonForm.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Person","_ref","person","deleteButton","react_default","a","createElement","name","number","onClick","Search","props","onSubmit","applyFilter","onChange","handleSearch","setShowAll","showAll","AddPersonForm","addPerson","value","newName","handleNameChange","newNumber","handleNumberChange","type","baseUrl","services_persons","axios","get","then","response","data","newObject","post","id","delete","concat","put","Notification","notification","className","text","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","searchItem","setSearchItem","_useState9","_useState10","setNotification","_useState11","_useState12","filteredPersons","filter","toLowerCase","includes","useEffect","personsService","initialPersons","components_Notification","components_Search","event","preventDefault","target","components_AddPersonForm","personObject","map","find","p","message","window","confirm","updatedPerson","objectSpread","ret","catch","error","setTimeout","alert","updatedPersons","console","log","components_Person","key","nameToBeDeleted","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4a5f63a8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ({ person, deleteButton }) => {\r\n\r\n    return (\r\n\r\n        <li>\r\n            {person.name}: {person.number}\r\n            <button onClick={deleteButton}>Delete</button>\r\n        </li>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\n\r\nconst Search = (props) => {\r\n    return (\r\n        <div>\r\n            <h2>Search:</h2>\r\n            <form onSubmit={props.applyFilter}>\r\n                <div>Filter:\r\n            <input\r\n                        onChange={props.handleSearch}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button onClick={() => props.setShowAll(!props.showAll)}>\r\n                        {props.showAll ? 'Search' : 'Reset'}</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search","import React from 'react'\r\n\r\nconst AddPersonForm = (props) => {\r\n    return (\r\n        <div>\r\n            <h2>Add a new record:</h2>\r\n            <form onSubmit={props.addPerson}>\r\n                <div>\r\n                    name:\r\n            <input\r\n                        value={props.newName}\r\n                        onChange={props.handleNameChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    number:\r\n            <input\r\n                        value={props.newNumber}\r\n                        onChange={props.handleNumberChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddPersonForm","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst updateNumber = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, deletePerson, updateNumber }","import React from \"react\"\r\n\r\nconst Notification = ({ notification }) => {\r\n    if (notification === null) {\r\n        return null\r\n    }\r\n    else {\r\n        if (notification.type === \"notification\") {\r\n            return (\r\n                <div className=\"notification\">\r\n                    {notification.text}\r\n                </div>\r\n            )\r\n        } else if (notification.type === \"error\") {\r\n            return (\r\n                <div className=\"error\">\r\n                    {notification.text}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Person from './components/Person'\nimport Search from './components/Search'\nimport AddPersonForm from './components/AddPersonForm'\nimport personsService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [searchItem, setSearchItem] = useState('')\n  const [notification, setNotification] = useState(null)\n\n  const [showAll, setShowAll] = useState(true)\n\n  const filteredPersons = showAll\n    ? persons\n    : persons.filter(name => name.name.toLowerCase().includes(searchItem.toLowerCase()))\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const deleteButton = id => {\n\n    const nameToBeDeleted = persons.find(p => p.id === id).name\n    const message = `Do you want to delete ${nameToBeDeleted}?`\n    const result = window.confirm(message)\n\n    if (result === true) {\n      personsService\n        .deletePerson(id)\n        .then(setPersons(persons.filter(p => p.id !== id)))\n        .catch(error => {\n          setNotification(\n            {\n              text: `${nameToBeDeleted} was already deleted from the server`,\n              type: 'error'\n            },\n          )\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n          setPersons(persons.filter(p => p.id !== id))\n        })\n\n        setNotification(\n          {\n            text: `A record for ${nameToBeDeleted} was deleted`,\n            type: 'notification'\n          }\n        )\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000\n        )\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    if (!persons.map(name => name.name).includes(newName)) {\n      personsService\n        .create(personObject)\n        .then(updatedPersons => {\n          setPersons(persons.concat(updatedPersons))\n          setNewName('')\n          setNewNumber('')\n        })\n        .then(() => {\n          setNotification(\n            {\n              text: `${newName} is added`,\n              type: 'notification'\n            }\n          )\n    \n          setTimeout(() => {\n            setNotification(null)\n          }, 5000\n          )\n        })\n        .catch(error => {\n          console.log(error.response.data)\n          setNotification(\n            {\n              text: `${error.response.data.error}`,\n              type: 'error'\n            }\n          )\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000\n          )\n        })\n    }\n    else if (persons.find(p => p.name === newName).number !== newNumber) {\n      var message = `${newName} is already in the list, do you want to update the number?`\n      var result = window.confirm(message)\n      if (result === true) {\n        const person = persons.find(p => p.name === newName)\n        const updatedPerson = { ...person, number: newNumber }\n        const id = persons.find(p => p.name === newName).id\n        personsService\n          .updateNumber(id, updatedPerson)\n          .then(ret => {\n            setPersons(persons.map(person => person.id !== id ? person : ret))\n          })\n          .catch(error => {\n            setNotification(\n              {\n                text: `${newName} was already deleted from the server`,\n                type: 'error'\n              },\n            )\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000)\n            setPersons(persons.filter(p => p.id !== id))\n          })\n\n        setNotification(\n          {\n            text: `A number for ${newName} is updated to ${newNumber}`,\n            type: 'notification'\n          }\n        )\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000\n        )\n      }\n    } else {\n      message = `${newName} is already in the list`;\n      window.alert(message);\n    }\n  }\n\n  const handleSearch = (event) => {\n    setSearchItem(event.target.value)\n  }\n\n  const applyFilter = (event) => {\n    event.preventDefault()\n  }\n\n  const rows = () => filteredPersons.map(person =>\n    <Person\n      key={person.id}\n      person={person}\n      deleteButton={(() => deleteButton(person.id))}\n    />\n  )\n\n\n  return (\n    <div>\n\n      <Notification notification={notification} />\n\n      <Search\n        applyFilter={applyFilter}\n        handleSearch={handleSearch}\n        showAll={showAll}\n        setShowAll={setShowAll}\n      />\n\n      <AddPersonForm\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        addPerson={addPerson}\n      />\n      <div>\n        <h2>Numbers</h2>\n        <ul>\n          {rows()}\n        </ul>\n      </div>\n\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
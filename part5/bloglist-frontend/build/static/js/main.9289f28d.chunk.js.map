{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","components/LoginForm.js","components/Notification.js","components/Togglable.js","components/BlogForm.js","App.js","index.js"],"names":["Blog","_ref","blog","user","handleLikeButton","handleDeleteButton","_useState","useState","_useState2","Object","slicedToArray","visible","setVisible","hideWhenVisible","display","showWhenVisible","react_default","a","createElement","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","onClick","className","title","author","href","url","likes","username","token","services_blogs","getAll","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","abrupt","data","stop","apply","this","arguments","create","_ref2","_callee2","newObject","config","_context2","headers","Authorization","post","_x","update","_ref3","_callee3","id","_context3","put","concat","_x2","_x3","setToken","newToken","deleteBlog","_ref4","_callee4","_context4","delete","_x4","services_login","login","credentials","LoginForm","handleLogin","setUsername","password","setPassword","onSubmit","type","value","name","onChange","target","Notification","notification","text","Togglable","React","forwardRef","props","ref","toggleVisibility","useImperativeHandle","buttonLabel","children","BlogForm","addBlog","newTitle","handleTitleChange","newAuthor","handleAuthorChange","newUrl","handleUrlChange","App","blogs","setBlogs","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","setNotification","_useState9","_useState10","setNewTitle","_useState11","_useState12","setNewAuthor","_useState13","_useState14","setNewUrl","_useState15","_useState16","setUser","_useState17","_useState18","loginVisible","setLoginVisible","event","_user","preventDefault","loginService","window","localStorage","setItem","JSON","stringify","blogsService","t0","setTimeout","useEffect","then","initialBlogs","loggedUserJSON","getItem","parse","message","confirm","String","filter","b","blogObject","updatedBlog","map","blogFormRef","current","createRef","components_Notification","components_LoginForm","loginForm","clear","sort","components_Blog","key","components_Togglable","components_BlogForm","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9289f28d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst Blog = ({ blog, user, handleLikeButton, handleDeleteButton }) => {\r\n  const [visible, setVisible] = useState(true)\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n  }\r\n  if (user === null) {\r\n    return null\r\n  } else {\r\n    return (\r\n      <div style={blogStyle}>\r\n        <div style={showWhenVisible}>\r\n          <div onClick={() => setVisible(!visible)} className='blog'>\r\n            {blog.title}, {blog.author}\r\n          </div>\r\n        </div>\r\n        <div style={hideWhenVisible}>\r\n          {blog.title}, {blog.author} <br />\r\n          <a href={blog.url}>{blog.url}</a>\r\n          <br />\r\n          {blog.likes} likes <br />\r\n          added by {blog.user.username} <br />\r\n          <button onClick={() => handleLikeButton(blog)}>like</button> <br />\r\n          {blog.user.username === user.username && (\r\n            <button onClick={() => handleDeleteButton(blog)}>delete</button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Blog\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/blog'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\n\r\nconst update = async (id, newObject) => {\r\n  const response = await axios.put(`${ baseUrl }/${id}`, newObject)\r\n  return response.data\r\n}\r\n\r\n\r\nconst deleteBlog = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll, create, update, setToken, deleteBlog }\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst LoginForm = ({\r\n  handleLogin,\r\n  username,\r\n  setUsername,\r\n  password,\r\n  setPassword\r\n}) => {\r\n  return (\r\n    <form onSubmit={handleLogin}>\r\n      <div>\r\n        <h2>Login</h2>\r\n        username\r\n        <input\r\n          type='text'\r\n          value={username}\r\n          name='Username'\r\n          onChange={({ target }) => setUsername(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        password\r\n        <input\r\n          type='password'\r\n          value={password}\r\n          name='Password'\r\n          onChange={({ target }) => setPassword(target.value)}\r\n        />\r\n      </div>\r\n      <button type='submit'>login</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  handleLogin: PropTypes.func.isRequired,\r\n  setUsername: PropTypes.func.isRequired,\r\n  setPassword: PropTypes.func.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  password: PropTypes.string.isRequired\r\n}\r\n\r\nexport default LoginForm\r\n","import React from 'react'\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (notification === null) {\r\n    return null\r\n  } else {\r\n    if (notification.type === 'notification') {\r\n      return <div className='notification'>{notification.text}</div>\r\n    } else if (notification.type === 'error') {\r\n      return <div className='error'>{notification.text}</div>\r\n    }\r\n  }\r\n}\r\n\r\nexport default Notification\r\n","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible} className='togglableContent'>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Togglable\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst BlogForm = ({\r\n  user,\r\n  addBlog,\r\n  newTitle,\r\n  handleTitleChange,\r\n  newAuthor,\r\n  handleAuthorChange,\r\n  newUrl,\r\n  handleUrlChange\r\n}) => {\r\n  if (user === null) {\r\n    return null\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h2>Add a new record:</h2>\r\n        <form onSubmit={addBlog}>\r\n          <div>\r\n            title:\r\n            <input value={newTitle} onChange={handleTitleChange} />\r\n          </div>\r\n          <div>\r\n            author:\r\n            <input\r\n              value={newAuthor}\r\n              onChange={handleAuthorChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            URL:\r\n            <input value={newUrl} onChange={handleUrlChange} />\r\n          </div>\r\n          <div>\r\n            <button type='submit'>add</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nBlogForm.propTypes = {\r\n  handleTitleChange: PropTypes.func.isRequired,\r\n  handleAuthorChange: PropTypes.func.isRequired,\r\n  handleUrlChange: PropTypes.func.isRequired,\r\n  addBlog: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired\r\n}\r\n\r\nexport default BlogForm\r\n","import React, { useState, useEffect } from 'react'\r\nimport './index.css'\r\nimport Blog from './components/Blog'\r\nimport blogsService from './services/blogs'\r\nimport loginService from './services/login'\r\nimport LoginForm from './components/LoginForm'\r\nimport Notification from './components/Notification'\r\nimport Togglable from './components/Togglable'\r\nimport BlogForm from './components/BlogForm'\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [notification, setNotification] = useState(null)\r\n  const [newTitle, setNewTitle] = useState('')\r\n  const [newAuthor, setNewAuthor] = useState('')\r\n  const [newUrl, setNewUrl] = useState('')\r\n  const [user, setUser] = useState(null)\r\n  const [loginVisible, setLoginVisible] = useState(false)\r\n\r\n  const handleLogin = async event => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username,\r\n        password\r\n      })\r\n\r\n      window.localStorage.setItem('loggedUser', JSON.stringify(user))\r\n\r\n      blogsService.setToken(user.token)\r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (exception) {\r\n      setNotification({\r\n        type: 'error',\r\n        text: 'Wrong credentials'\r\n      })\r\n      setTimeout(() => {\r\n        setNotification(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    blogsService.getAll().then(initialBlogs => {\r\n      setBlogs(initialBlogs)\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      blogsService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  const logOutHandle = () => {\r\n    window.localStorage.clear()\r\n    setUser(null)\r\n  }\r\n\r\n  const rows = () => {\r\n    blogs.sort((a, b) => b.likes - a.likes)\r\n    return (\r\n      <div>\r\n        {blogs.map(blog => (\r\n          <Blog\r\n            user={user}\r\n            key={blog.id}\r\n            blog={blog}\r\n            handleLikeButton={handleLikeButton}\r\n            handleDeleteButton={handleDeleteButton}\r\n          />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const handleTitleChange = event => {\r\n    setNewTitle(event.target.value)\r\n  }\r\n\r\n  const handleAuthorChange = event => {\r\n    setNewAuthor(event.target.value)\r\n  }\r\n\r\n  const handleUrlChange = event => {\r\n    setNewUrl(event.target.value)\r\n  }\r\n\r\n  const handleDeleteButton = async blog => {\r\n    try {\r\n      const message = `Do you want to delete ${blog.title}?`\r\n      const result = window.confirm(message)\r\n      if (result === true) {\r\n        await blogsService.deleteBlog(String(blog.id))\r\n        setBlogs(blogs.filter(b => b.id !== blog.id))\r\n        setNotification({\r\n          type: 'notification',\r\n          text: `Deleted the blog ${blog.title} by ${blog.author}`\r\n        })\r\n\r\n        setTimeout(() => {\r\n          setNotification(null)\r\n        }, 5000)\r\n      }\r\n    } catch (exception) {\r\n      setNotification({\r\n        type: 'error',\r\n        text: `Failed to delete the blog: ${exception}`\r\n      })\r\n      setTimeout(() => {\r\n        setNotification(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleLikeButton = async blog => {\r\n    try {\r\n      const blogObject = {\r\n        user: blog.user.id,\r\n        likes: blog.likes + 1,\r\n        author: blog.author,\r\n        title: blog.title,\r\n        url: blog.url,\r\n        id: blog.id\r\n      }\r\n\r\n      const updatedBlog = await blogsService.update(String(blog.id), blogObject)\r\n\r\n      setBlogs(blogs.map(b => (b.id === blog.id ? updatedBlog : b)))\r\n    } catch (exception) {\r\n      setNotification({\r\n        type: 'error',\r\n        text: `Failed to like the blog: ${exception}`\r\n      })\r\n      setTimeout(() => {\r\n        setNotification(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const addBlog = async event => {\r\n    event.preventDefault()\r\n    blogFormRef.current.toggleVisibility()\r\n    try {\r\n      const blogObject = {\r\n        title: newTitle,\r\n        author: newAuthor,\r\n        url: newUrl\r\n      }\r\n\r\n      const updatedBlog = await blogsService.create(blogObject)\r\n\r\n      setBlogs(blogs.concat(updatedBlog))\r\n      setNewTitle('')\r\n      setNewAuthor('')\r\n      setNewUrl('')\r\n\r\n      setNotification({\r\n        type: 'notification',\r\n        text: `Added the blog ${newTitle} by ${newAuthor}`\r\n      })\r\n\r\n      setTimeout(() => {\r\n        setNotification(null)\r\n      }, 5000)\r\n    } catch (exception) {\r\n      setNotification({\r\n        type: 'error',\r\n        text: `Failed to add the blog: ${exception}`\r\n      })\r\n      setTimeout(() => {\r\n        setNotification(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const loginForm = () => {\r\n    const hideWhenVisible = { display: loginVisible ? 'none' : '' }\r\n    const showWhenVisible = { display: loginVisible ? '' : 'none' }\r\n\r\n    return (\r\n      <div>\r\n        <div style={hideWhenVisible}>\r\n          <button onClick={() => setLoginVisible(true)}>log in</button>\r\n        </div>\r\n        <div style={showWhenVisible}>\r\n          <LoginForm\r\n            user={user}\r\n            handleLogin={handleLogin}\r\n            username={username}\r\n            setUsername={setUsername}\r\n            password={password}\r\n            setPassword={setPassword}\r\n          />\r\n          <button onClick={() => setLoginVisible(false)}>cancel</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const blogFormRef = React.createRef()\r\n\r\n  const blogForm = () => (\r\n    <Togglable buttonLabel='new blog' ref={blogFormRef}>\r\n      <BlogForm\r\n        user={user}\r\n        addBlog={addBlog}\r\n        handleTitleChange={handleTitleChange}\r\n        handleAuthorChange={handleAuthorChange}\r\n        handleUrlChange={handleUrlChange}\r\n      />\r\n    </Togglable>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <h1>Blogs</h1>\r\n\r\n      <Notification notification={notification} />\r\n\r\n      {user === null ? (\r\n        loginForm()\r\n      ) : (\r\n        <div>\r\n          You are loged in as {user.username}{' '}\r\n          <button onClick={() => logOutHandle()}>log out</button>\r\n          {rows()}\r\n          {blogForm()}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}
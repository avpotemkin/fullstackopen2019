{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\potemar\\\\Documents\\\\src\\\\FullStack Course\\\\part1\\\\unicafe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\potemar\\\\Documents\\\\src\\\\FullStack Course\\\\part1\\\\unicafe\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n  // save clicks of each button to own state\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        good = _useState2[0],\n        setGood = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        neutral = _useState4[0],\n        setNeutral = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bad = _useState6[0],\n        setBad = _useState6[1];\n\n  const handleGoodFeedback = () => {\n    setGood(good + 1);\n  };\n\n  const handleNeutralFeedback = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const handleBadFeedback = () => {\n    setBad(bad + 1);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Give Feedback\"), React.createElement(Button, {\n    text: \"Good\",\n    onClick: handleGoodFeedback,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Button, {\n    text: \"Neutral\",\n    onClick: handleNeutralFeedback,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(Button, {\n    text: \"Bad\",\n    onClick: handleBadFeedback,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Statistics\"), React.createElement(Statistics, {\n    good: good,\n    neutral: neutral,\n    bad: bad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n};\n\nconst Button = ({\n  onClick,\n  text\n}) => React.createElement(\"button\", {\n  onClick: onClick,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, text);\n\nconst Statistic = props => {\n  const text = props.text,\n        value = props.value;\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, text, \": \", value);\n};\n\nconst Statistics = props => {\n  const good = props.good,\n        neutral = props.neutral,\n        bad = props.bad;\n  const all = good + neutral + bad;\n  const average = (good - bad) / all;\n  const positive = (good / all * 100).toFixed(2) + '%';\n\n  if (all > 0) {\n    return React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Statistic, {\n      text: \"Good\",\n      value: good,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Statistic, {\n      text: \"Neutral\",\n      value: neutral,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Statistic, {\n      text: \"Bad\",\n      value: bad,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Statistic, {\n      text: \"All\",\n      value: all,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Statistic, {\n      text: \"Average\",\n      value: average,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Statistic, {\n      text: \"Positive\",\n      value: positive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"No feedback given\");\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:\\Users\\potemar\\Documents\\src\\FullStack Course\\part1\\unicafe\\src\\index.js"],"names":["React","useState","ReactDOM","App","good","setGood","neutral","setNeutral","bad","setBad","handleGoodFeedback","handleNeutralFeedback","handleBadFeedback","Button","onClick","text","Statistic","props","value","Statistics","all","average","positive","toFixed","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGoodFeedback = () => {\n    setGood(good + 1)\n  }\n\n  const handleNeutralFeedback = () => {\n    setNeutral(neutral + 1)\n  }\n\n  const handleBadFeedback = () => {\n    setBad(bad + 1)\n  }\n  \n  return (\n    <div>\n      <h1>Give Feedback</h1>\n      <Button text=\"Good\" onClick = {handleGoodFeedback}/>\n      <Button text=\"Neutral\" onClick = {handleNeutralFeedback}/>\n      <Button text=\"Bad\" onClick = {handleBadFeedback}/>\n      <h1>Statistics</h1>\n      <Statistics good={good} neutral={neutral} bad={bad}/>\n    </div>\n  )\n}\n\nconst Button = ({onClick, text}) => \n(\n  <button onClick={onClick}>{text}</button>\n)\n\nconst Statistic = (props) => {\n    const {text, value} = props\n    return (\n        <p>{text}: {value}</p>\n    )\n}\n\nconst Statistics = (props) => {\n    const { good, neutral, bad } = props\n    const all = good + neutral + bad\n    const average = (good - bad)/all\n    const positive = ((good/all) * 100).toFixed(2) + '%'\n\n    if (all > 0) {\n        return (\n            <table>\n                <Statistic text=\"Good\" value={good}/>\n                <Statistic text=\"Neutral\" value={neutral}/>\n                <Statistic text=\"Bad\" value={bad}/>\n                <Statistic text=\"All\" value={all}/>\n                <Statistic text=\"Average\" value={average}/>\n                <Statistic text=\"Positive\" value={positive}/>\n            </table>\n        )\n    }\n\n    return (\n        <p>No feedback given</p>\n    )\n}\n\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}